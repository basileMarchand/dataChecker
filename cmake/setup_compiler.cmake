include(CheckCXXCompilerFlag)

MACRO(AddCXXFlag FLAG REQUIRED)
check_cxx_compiler_flag("-${FLAG}" "${FLAG}_AVAILABLE")
if(${${FLAG}_AVAILABLE})
    set(CMAKE_CXX_FLAGS "-${FLAG} ${CMAKE_CXX_FLAGS}")
    message(STATUS "flag: '-${FLAG}' enabled")
else()
    if( ${REQUIRED} )
        message(FATAL_ERROR "flag -${FLAG} is required but seems to be not supported by your compiler")
    else()
        message(STATUS "flag: -${FLAG} disabled")
    endif( ${REQUIRED} )
endif(${${FLAG}_AVAILABLE})
ENDMACRO(AddCXXFlag)

AddCXXFlag("Wall" TRUE)
AddCXXFlag("Wextra" TRUE)
AddCXXFlag("Wpedantic" TRUE)

if( CMAKE_BUILD_TYPE STREQUAL Release )
    AddCXXFlag("O2" TRUE)
elseif( CMAKE_BUILD_TYPE STREQUAL Debug )
    AddCXXFlag("O0" TRUE)
    AddCXXFlag("ggdb" TRUE)
elseif( CMAKE_BUILD_TYPE STREQUAL RelWithDebInfo )
    AddCXXFlag("O2" TRUE)
    AddCXXFlag("ggdb" TRUE)
else()
    message(FATAL_ERROR "CMAKE_BUILD_TYPE not supported ${CMAKE_BUILD_TYPE}")
endif()